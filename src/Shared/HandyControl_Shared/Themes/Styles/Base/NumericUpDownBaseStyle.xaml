<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="clr-namespace:HandyControl.Controls"
    xmlns:interactivity="clr-namespace:HandyControl.Interactivity"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="NumericUpDownBaseStyle" TargetType="hc:NumericUpDown">
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="hc:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Padding" Value="{StaticResource DefaultInputPadding}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="hc:NumericUpDown">
                    <Border
                        x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <hc:WatermarkTextBox
                                x:Name="PART_TextBox"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                CaretBrush="{TemplateBinding CaretBrush}"
                                Focusable="True"
                                Foreground="{TemplateBinding Foreground}"
                                IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Button
                                x:Name="UpButton"
                                Grid.Column="1"
                                Width="30"
                                Height="14"
                                Margin="0,0,0,14"
                                Padding="5,7,5,1"
                                VerticalAlignment="Center"
                                hc:IconElement.Geometry="{StaticResource UpGeometry}"
                                Command="interactivity:ControlCommands.Prev"
                                Focusable="False"
                                Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                                Style="{StaticResource ButtonIcon}"
                                Visibility="{TemplateBinding ShowUpDownButton,
                                                             Converter={StaticResource Boolean2VisibilityConverter}}" />
                            <Button
                                x:Name="DownButton"
                                Grid.Column="1"
                                Width="30"
                                Height="14"
                                Margin="0,14,0,0"
                                Padding="5,1,5,7"
                                VerticalAlignment="Center"
                                hc:IconElement.Geometry="{StaticResource DownGeometry}"
                                Command="interactivity:ControlCommands.Next"
                                Focusable="False"
                                Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                                Style="{StaticResource ButtonIcon}"
                                Visibility="{TemplateBinding ShowUpDownButton,
                                                             Converter={StaticResource Boolean2VisibilityConverter}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                        <Trigger Property="ShowUpDownButton" Value="False">
                            <Setter TargetName="PART_TextBox" Property="Margin" Value="2,0,2,1" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="UpButton" Property="IsEnabled" Value="False" />
                            <Setter TargetName="DownButton" Property="IsEnabled" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="NumericUpDownExtendTopTemplate" TargetType="hc:NumericUpDown">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding Path=(hc:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengthConverter}}" MinHeight="{Binding Path=(hc:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <DockPanel
                Grid.ColumnSpan="2"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{Binding Path=(hc:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(hc:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(hc:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    Margin="1,0,1,0"
                    hc:TextBlockAttach.AutoTooltip="True"
                    Text="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Border
                x:Name="templateRoot"
                Grid.Row="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <hc:WatermarkTextBox
                        x:Name="PART_TextBox"
                        Margin="-2,0"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        CaretBrush="{TemplateBinding CaretBrush}"
                        Focusable="True"
                        Foreground="{TemplateBinding Foreground}"
                        IsReadOnly="{TemplateBinding IsReadOnly}" />
                    <Button
                        x:Name="UpButton"
                        Grid.Column="1"
                        Width="30"
                        Height="14"
                        Margin="0,0,0,14"
                        Padding="5,7,5,1"
                        VerticalAlignment="Center"
                        hc:IconElement.Geometry="{StaticResource UpGeometry}"
                        Command="interactivity:ControlCommands.Prev"
                        Focusable="False"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}"
                        Visibility="{TemplateBinding ShowUpDownButton,
                                                     Converter={StaticResource Boolean2VisibilityConverter}}" />
                    <Button
                        x:Name="DownButton"
                        Grid.Column="1"
                        Width="30"
                        Height="14"
                        Margin="0,14,0,0"
                        Padding="5,1,5,7"
                        VerticalAlignment="Center"
                        hc:IconElement.Geometry="{StaticResource DownGeometry}"
                        Command="interactivity:ControlCommands.Next"
                        Focusable="False"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}"
                        Visibility="{TemplateBinding ShowUpDownButton,
                                                     Converter={StaticResource Boolean2VisibilityConverter}}" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="templateRoot" Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="UpButton" Property="IsEnabled" Value="False" />
                <Setter TargetName="DownButton" Property="IsEnabled" Value="False" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="NumericUpDownExtendLeftTemplate" TargetType="hc:NumericUpDown">
        <Grid Height="{Binding Path=(hc:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(hc:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=(hc:InfoElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <DockPanel
                Margin="0,7,6,7"
                HorizontalAlignment="{Binding Path=(hc:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                VerticalAlignment="{Binding Path=(hc:TitleElement.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(hc:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(hc:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    hc:TextBlockAttach.AutoTooltip="True"
                    Text="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Border
                x:Name="templateRoot"
                Grid.Column="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <hc:WatermarkTextBox
                        x:Name="PART_TextBox"
                        Margin="-2,0"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        CaretBrush="{TemplateBinding CaretBrush}"
                        Focusable="True"
                        Foreground="{TemplateBinding Foreground}"
                        IsReadOnly="{TemplateBinding IsReadOnly}" />
                    <Button
                        x:Name="UpButton"
                        Grid.Column="1"
                        Width="30"
                        Height="14"
                        Margin="0,0,0,14"
                        Padding="5,7,5,1"
                        VerticalAlignment="Center"
                        hc:IconElement.Geometry="{StaticResource UpGeometry}"
                        Command="interactivity:ControlCommands.Prev"
                        Focusable="False"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}"
                        Visibility="{TemplateBinding ShowUpDownButton,
                                                     Converter={StaticResource Boolean2VisibilityConverter}}" />
                    <Button
                        x:Name="DownButton"
                        Grid.Column="1"
                        Width="30"
                        Height="14"
                        Margin="0,14,0,0"
                        Padding="5,1,5,7"
                        VerticalAlignment="Center"
                        hc:IconElement.Geometry="{StaticResource DownGeometry}"
                        Command="interactivity:ControlCommands.Next"
                        Focusable="False"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}"
                        Visibility="{TemplateBinding ShowUpDownButton,
                                                     Converter={StaticResource Boolean2VisibilityConverter}}" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="templateRoot" Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="UpButton" Property="IsEnabled" Value="False" />
                <Setter TargetName="DownButton" Property="IsEnabled" Value="False" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="NumericUpDownExtendBaseStyle"
        BasedOn="{StaticResource NumericUpDownBaseStyle}"
        TargetType="hc:NumericUpDown">
        <Setter Property="hc:InfoElement.Symbol" Value="●" />
        <Setter Property="hc:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="hc:InfoElement.MinContentHeight" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template" Value="{StaticResource NumericUpDownExtendTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="hc:InfoElement.TitlePlacement" Value="Left">
                <Setter Property="Template" Value="{StaticResource NumericUpDownExtendLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="NumericUpDownPlusTopTemplate" TargetType="hc:NumericUpDown">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StoryboardShow">
                <ThicknessAnimation
                    Storyboard.TargetName="PART_ErrorTip"
                    Storyboard.TargetProperty="Margin"
                    To="9,0,0,-18"
                    Duration="0:0:.2" />
            </Storyboard>
            <Storyboard x:Key="StoryboardHidden">
                <ThicknessAnimation
                    Storyboard.TargetName="PART_ErrorTip"
                    Storyboard.TargetProperty="Margin"
                    To="9,0,0,4"
                    Duration="0:0:0" />
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding Path=(hc:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengthConverter}}" MinHeight="{Binding Path=(hc:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <TextBlock
                Name="PART_ErrorTip"
                Grid.Row="1"
                Margin="9,0,0,4"
                VerticalAlignment="Bottom"
                FontSize="12"
                Foreground="{DynamicResource DangerBrush}" />
            <DockPanel
                Grid.ColumnSpan="2"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{Binding Path=(hc:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(hc:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(hc:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    Margin="1,0,1,0"
                    hc:TextBlockAttach.AutoTooltip="True"
                    Text="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Border
                x:Name="templateRoot"
                Grid.Row="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="25" />
                    </Grid.ColumnDefinitions>
                    <hc:WatermarkTextBox
                        x:Name="PART_TextBox"
                        Grid.Row="0"
                        Grid.Column="0"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        CaretBrush="{TemplateBinding CaretBrush}"
                        Focusable="{TemplateBinding Focusable}"
                        IsReadOnly="{TemplateBinding IsReadOnly}"
                        Watermark="{Binding Path=(hc:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}" />
                    <Button
                        Name="ButtonClear"
                        Grid.Column="1"
                        Width="16"
                        Height="{x:Static system:Double.NaN}"
                        Padding="0,6"
                        hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                        Command="interactivity:ControlCommands.Clear"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}"
                        Visibility="Collapsed" />
                    <Button
                        x:Name="UpButton"
                        Grid.Column="2"
                        Width="30"
                        Height="14"
                        Margin="0,0,0,14"
                        Padding="0,7,5,1"
                        VerticalAlignment="Center"
                        hc:IconElement.Geometry="{StaticResource UpGeometry}"
                        Command="interactivity:ControlCommands.Prev"
                        Focusable="False"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}" />
                    <Button
                        x:Name="DownButton"
                        Grid.Column="2"
                        Width="30"
                        Height="14"
                        Margin="0,14,0,0"
                        Padding="0,1,5,7"
                        VerticalAlignment="Center"
                        hc:IconElement.Geometry="{StaticResource DownGeometry}"
                        Command="interactivity:ControlCommands.Next"
                        Focusable="False"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="templateRoot" Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="UpButton" Property="IsEnabled" Value="False" />
                <Setter TargetName="DownButton" Property="IsEnabled" Value="False" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="IsReadOnly" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <!--<Trigger Property="IsError" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardShow}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardHidden}" />
                </Trigger.ExitActions>
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="NumericUpDownPlusLeftTemplate" TargetType="hc:NumericUpDown">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StoryboardShow">
                <ThicknessAnimation
                    Storyboard.TargetName="PART_ErrorTip"
                    Storyboard.TargetProperty="Margin"
                    To="9,0,0,-18"
                    Duration="0:0:.2" />
            </Storyboard>
            <Storyboard x:Key="StoryboardHidden">
                <ThicknessAnimation
                    Storyboard.TargetName="PART_ErrorTip"
                    Storyboard.TargetProperty="Margin"
                    To="9,0,0,4"
                    Duration="0:0:0" />
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid Height="{Binding Path=(hc:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(hc:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=(hc:InfoElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock
                Name="PART_ErrorTip"
                Grid.Column="1"
                Margin="9,0,0,4"
                VerticalAlignment="Bottom"
                FontSize="12"
                Foreground="{DynamicResource DangerBrush}" />
            <DockPanel
                Grid.Column="0"
                Margin="0,7,6,7"
                HorizontalAlignment="{Binding Path=(hc:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                VerticalAlignment="{Binding Path=(hc:TitleElement.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(hc:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(hc:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    hc:TextBlockAttach.AutoTooltip="True"
                    Text="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Border
                x:Name="templateRoot"
                Grid.Column="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid
                    x:Name="PART_Root"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="25" />
                    </Grid.ColumnDefinitions>
                    <hc:WatermarkTextBox
                        x:Name="PART_TextBox"
                        Grid.Row="0"
                        Grid.Column="0"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        CaretBrush="{TemplateBinding CaretBrush}"
                        Focusable="{TemplateBinding Focusable}"
                        IsReadOnly="{TemplateBinding IsReadOnly}"
                        Watermark="{Binding Path=(hc:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}" />
                    <Button
                        Name="PART_ButtonClear"
                        Grid.Column="1"
                        Width="16"
                        Height="{x:Static system:Double.NaN}"
                        Padding="0,6"
                        hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                        Command="interactivity:ControlCommands.Clear"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}"
                        Visibility="Collapsed" />
                    <Button
                        x:Name="UpButton"
                        Grid.Column="2"
                        Width="30"
                        Height="14"
                        Margin="0,0,0,14"
                        Padding="0,7,5,1"
                        VerticalAlignment="Center"
                        hc:IconElement.Geometry="{StaticResource UpGeometry}"
                        Command="interactivity:ControlCommands.Prev"
                        Focusable="False"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}"
                        Visibility="{TemplateBinding ShowUpDownButton,
                                                     Converter={StaticResource Boolean2VisibilityConverter}}" />
                    <Button
                        x:Name="DownButton"
                        Grid.Column="2"
                        Width="30"
                        Height="14"
                        Margin="0,14,0,0"
                        Padding="0,1,5,7"
                        VerticalAlignment="Center"
                        hc:IconElement.Geometry="{StaticResource DownGeometry}"
                        Command="interactivity:ControlCommands.Next"
                        Focusable="False"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}"
                        Visibility="{TemplateBinding ShowUpDownButton,
                                                     Converter={StaticResource Boolean2VisibilityConverter}}" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="templateRoot" Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="UpButton" Property="IsEnabled" Value="False" />
                <Setter TargetName="DownButton" Property="IsEnabled" Value="False" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="IsReadOnly" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ButtonClear" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <!--<Trigger Property="IsError" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardShow}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardHidden}" />
                </Trigger.ExitActions>
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="NumericUpDownPlusBaseStyle"
        BasedOn="{StaticResource NumericUpDownExtendBaseStyle}"
        TargetType="hc:NumericUpDown">
        <!--<Setter Property="IsError" Value="{Binding Path=(Validation.HasError), RelativeSource={RelativeSource Self}}" />-->
        <Setter Property="Template" Value="{StaticResource NumericUpDownPlusTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="hc:InfoElement.TitlePlacement" Value="Left">
                <Setter Property="Template" Value="{StaticResource NumericUpDownPlusLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
